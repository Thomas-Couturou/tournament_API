openapi: 3.0.0
info:
  title: Tournament API
  version: 1.0.0
  description: |
    This Swagger documentation file outlines the API specifications for a Tournament application built with Ktor and MongoDB.

paths:
  /player:
    post:
      summary: Create a new player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerRequestCreate'
      responses:
        '201':
          description: Player created successfully
        '400':
          description: Bad request
  /player/byId/{id}:
    get:
      summary: Retrieve player by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example: {}
        '404':
          description: Player not found
    delete:
      summary: Delete player by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Player deleted successfully
        '400':
          description: Bad request
        '404':
          description: Player not found
    patch:
      summary: Update player by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerRequestUpdate'
      responses:
        '200':
          description: Player updated successfully
        '400':
          description: Bad request
        '404':
          description: Player not found
  /player/byPseudo/{pseudo}:
    get:
      summary: Retrieve player by Pseudo
      parameters:
        - name: pseudo
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example: { }
        '404':
          description: Player not found
    patch:
      summary: Update player by Pseudo
      parameters:
        - name: pseudo
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerRequestUpdate'
      responses:
        '200':
          description: Player updated successfully
        '400':
          description: Bad request
        '404':
          description: Player not found

components:
  schemas:
    Player:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pseudo:
          type: string
        score:
          type: integer
      required:
        - id
        - pseudo
        - score

    PlayerRequestCreate:
      type: object
      properties:
        pseudo:
          type: string
      required:
        - pseudo

    PlayerRequestUpdate:
      type: object
      properties:
        score:
          type: integer
      required:
        - score